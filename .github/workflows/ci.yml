name: CI

on:
  push:
    branches:
      - master

jobs:
  windows:
    strategy:
      matrix:
        build: [1]
        include:
          - build: 1
            build-type: RelWithDebInfo
            compiler-name: MSVC 16.x
            os-name: Windows
            os: windows-latest
            dep-suffix: win.7z
            extract-tool: 7z x
            cmake-gen: Ninja
          - build: 2
            build-type: RelWithDebInfo
            compiler-name: Clang LLVM
            os-name: macOS
            os: macos-latest
            dep-suffix: mac.zip
            extract-tool: sudo unzip -d /usr/local -o
            cmake-gen: Unix Makefiles
    name: |
      ${{ matrix.os-name }}
      <${{ matrix.compiler-name }},
       ${{ matrix.build-type }}>
    runs-on: ${{ matrix.os }}

    steps:
    - name: Set package name
      shell: bash
      if: matrix.os == 'windows-latest'
      run: |
        echo "::set-env name=PKGNAME::$(echo Olive-${GITHUB_SHA::8}-Windows-x86_64)"

    - name: Set package name
      shell: bash
      if: matrix.os == 'macos-latest'
      run: |
        echo "::set-env name=PKGNAME::$(echo Olive-${GITHUB_SHA::8}-macOS)"

    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{ runner.workspace }}/build

    - name: Enable Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.3.0
      if: matrix.os == 'windows-latest'

    - name: Acquire Qt
      uses: jurplel/install-qt-action@v2.8.0
      with:
        version: 5.15.1

    - name: Acquire FFmpeg
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/ffmpeg-$DEP_SUFFIX
        $EXTRACT_TOOL ffmpeg-$DEP_SUFFIX

    - name: Acquire OpenColorIO
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/ocio-$DEP_SUFFIX
        $EXTRACT_TOOL ocio-$DEP_SUFFIX

    - name: Acquire OpenEXR
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/openexr-$DEP_SUFFIX
        $EXTRACT_TOOL openexr-$DEP_SUFFIX

    - name: Acquire OpenImageIO
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/oiio-$DEP_SUFFIX
        $EXTRACT_TOOL oiio-$DEP_SUFFIX

    - name: Acquire libpng
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/libpng-$DEP_SUFFIX
        $EXTRACT_TOOL libpng-$DEP_SUFFIX

    - name: Acquire libtiff
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/libtiff-$DEP_SUFFIX
        $EXTRACT_TOOL libtiff-$DEP_SUFFIX

    - name: Acquire turbojpeg
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/turbojpeg-$DEP_SUFFIX
        $EXTRACT_TOOL turbojpeg-$DEP_SUFFIX

    - name: Acquire zlib
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/zlib-$DEP_SUFFIX
        $EXTRACT_TOOL zlib-$DEP_SUFFIX
      if: matrix.os == 'windows-latest'

    - name: Acquire Boost
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/boost-$DEP_SUFFIX
        $EXTRACT_TOOL boost-$DEP_SUFFIX

    - name: Acquire Crashpad
      shell: bash
      env:
        DEP_SUFFIX: ${{ matrix.dep-suffix }}
        EXTRACT_TOOL: ${{ matrix.extract-tool }}
      run: |
        curl -fLOSs --retry 3 http://olivevideoeditor.org/deps/crashpad-$DEP_SUFFIX
        $EXTRACT_TOOL crashpad-$DEP_SUFFIX

    - name: Configure CMake
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      env:
        CMAKE_GEN: ${{ matrix.cmake-gen }}
      run: |
        PATH=$GITHUB_WORKSPACE:$PATH \
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -G "$CMAKE_GEN"

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: |
        cmake --build .

    - name: Test
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: |
        ctest -C ${{ matrix.build-type }}

    - name: Create Package
      working-directory: ${{ runner.workspace }}/build
      shell: cmd
      run: |
        mkdir olive-editor
        copy app\olive-editor.exe olive-editor
        copy app\olive-editor.pdb olive-editor
        windeployqt olive-editor\olive-editor.exe
        copy %GITHUB_WORKSPACE%\bin\*.dll olive-editor
        copy %GITHUB_WORKSPACE%\out\Default\crashpad_handler.exe olive-editor
      if: matrix.os == 'windows-latest'

    - name: Create Package
      working-directory: ${{ runner.workspace }}/build
      env:
        BUNDLE_NAME: Olive.app
      run: |
        mv app/$BUNDLE_NAME .
        macdeployqt $BUNDLE_NAME
        curl -fLOSs --retry 3 https://github.com/arl/macdeployqtfix/raw/master/macdeployqtfix.py
        python2 macdeployqtfix.py $BUNDLE_NAME/Contents/MacOS/Olive /usr/local/Cellar/qt5/5.*/
      if: matrix.os == 'macos-latest'

    - name: Deploy Installer
      working-directory: ${{ runner.workspace }}/build
      shell: cmd
      run: |
        curl -fLOSs https://download.microsoft.com/download/3/2/2/3224B87F-CFA0-4E70-BDA3-3DE650EFEBA5/vcredist_x64.exe
        copy %GITHUB_WORKSPACE%\app\packaging\windows\nsis\* .
        copy %GITHUB_WORKSPACE%\LICENSE .
        makensis -V4 -DX64 "-XOutFile %PKGNAME%.exe" olive.nsi
      if: matrix.os == 'windows-latest'

    - name: Deploy Portable
      working-directory: ${{ runner.workspace }}/build
      shell: cmd
      run: |
        type NUL > olive-editor\portable
        7z a %PKGNAME%.zip olive-editor
      if: matrix.os == 'windows-latest'

    - name: Deploy Package
      working-directory: ${{ runner.workspace }}/build
      run: |
        zip -r $PKGNAME.zip $BUNDLE_NAME
      if: matrix.os == 'macos-latest'

    - name: Upload Installer to Nightly Page
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      env:
        GH_AUTH_KEY: ${{ secrets.GH_AUTH_KEY }}
      run: |
        curl -X POST \
          -F file=@$PKGNAME.exe \
          -F key="$GH_AUTH_KEY" \
          -F hash="$GITHUB_SHA" \
          -F time="$(git -C $GITHUB_WORKSPACE show -s --format=%ct)" \
          -F comment="$(git -C $GITHUB_WORKSPACE show -s --format=%B)" \
          https://olivevideoeditor.org/dl/push.php
      if: matrix.os == 'windows-latest' && github.event_name != 'pull_request'

    - name: Upload Portable to Nightly Page
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      env:
        GH_AUTH_KEY: ${{ secrets.GH_AUTH_KEY }}
      run: |
        curl -X POST \
          -F file=@$PKGNAME.zip \
          -F key="$GH_AUTH_KEY" \
          -F hash="$GITHUB_SHA" \
          -F time="$(git -C $GITHUB_WORKSPACE show -s --format=%ct)" \
          -F comment="$(git -C $GITHUB_WORKSPACE show -s --format=%B)" \
          https://olivevideoeditor.org/dl/push.php
      if: matrix.os == 'windows-latest' && github.event_name != 'pull_request'

    - name: Upload Artifact to Nightly Page
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      env:
        GH_AUTH_KEY: ${{ secrets.GH_AUTH_KEY }}
      run: |
        curl -X POST \
          -F file=@$PKGNAME.zip \
          -F key="$GH_AUTH_KEY" \
          -F hash="$GITHUB_SHA" \
          -F time="$(git -C $GITHUB_WORKSPACE show -s --format=%ct)" \
          -F comment="$(git -C $GITHUB_WORKSPACE show -s --format=%B)" \
          https://olivevideoeditor.org/dl/push.php
      if: matrix.os == 'macos-latest' && github.event_name != 'pull_request'

    - name: Upload Installer Artifact to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PKGNAME }}.exe
        path: ${{ runner.workspace }}/build/${{ env.PKGNAME }}.exe
      if: matrix.os == 'windows-latest'

    - name: Upload Portable Artifact to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PKGNAME }}.zip
        path: ${{ runner.workspace }}/build/${{ env.PKGNAME }}.zip
      if: matrix.os == 'windows-latest'

    - name: Upload Artifact to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PKGNAME }}.zip
        path: ${{ runner.workspace }}/build/${{ env.PKGNAME }}.zip
      if: matrix.os == 'macos-latest'

    - name: Export Crashpad Symbols and Upload To Server
      working-directory: ${{ runner.workspace }}/build
      shell: cmd
      env:
        GH_AUTH_KEY: ${{ secrets.GH_AUTH_KEY }}
      run: |
        curl -fLSs --retry 3 https://github.com/google/breakpad/blob/master/src/tools/windows/binaries/dump_syms.exe?raw=true > dump_syms.exe
        dump_syms app\olive-editor.pdb > olive-editor.sym
        curl -X POST ^
          -F symfile=@olive-editor.sym ^
          -F key="%GH_AUTH_KEY%" ^
          https://olivevideoeditor.org/crashpad/symbols.php
      if: matrix.os == 'windows-latest'
